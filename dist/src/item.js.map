{"version":3,"sources":["../../src/item.js"],"names":["See3D","lib","Library","Scene","use","game","items","camera","scene","render","itm","push","ctx","alpha","beta","width","height","Item","position","Math3D","Point3D","Zero","rotation","points","planes","maxRadius","binding","addTo","inverse","i","length","rotate","norm","s","mul_","changeMaxRadius","max","m2","mod2","Math","sqrt","subTo","step","p","x","y","z","left","forward","up","Camera","ta","tan","tb","maxLen","item","itemCamPos","transToCameraPosition","PI","abs","transedPoints","transedPlanes","type","point3d","beginPath","arc","mappingTo","fillStyle","fill","closePath","moveTo","lineTo","strokeStyle","stroke","getPoint","e","console","error","bind","j","c","plane","mul","k","tmppos","point","itemWorldPoint","add","sub","Point","Line","start","end","copy","mod","Cube","w","h","d","Pyramid","pointCount","radius","delta_theta","plane_bottom","theta","sin","cos","atan","Platform","radius1","radius2","plane_top","Prism","define","toSee3D","global"],"mappings":"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","file":"item.js","sourcesContent":["!function (See3D) {\n    let lib = new See3D.Library(\"View\");\n\n    class Scene {\n        constructor() {\n            this.use = null;\n            this.game = null;\n            this.items = [ ];\n        }\n        camera(camera) {\n            this.use = camera;\n            camera.scene = this;\n            return this;\n        }\n        render() {\n            if (this.use) this.use.render();\n            return this;\n        }\n        push(itm) {\n            this.items.push(itm);\n            return this;\n        }\n        get ctx() { return this.game.ctx; }\n        get alpha() { return this.game.alpha; }\n        get beta() { return this.game.beta; }\n        get width() { return this.game.width(); }\n        get height() { return this.game.height(); }\n    }\n    class Item {\n        constructor(position = See3D.Math3D.Point3D.Zero(), rotation = new See3D.Math3D.Point3D()) {\n            this.position = position;\n            this.rotation = rotation;\n            this.points = [ ];\n            this.planes = [];\n            this.maxRadius = 0;\n            rotation.binding = this;\n        }\n        rotate(rotation) {\n            this.rotation.addTo(rotation);\n            rotation = rotation.inverse();\n            for (let i = 0; i < this.points.length; i++) {\n                this.points[i] = this.points[i].rotate(rotation);\n            }\n            for (let i = 0; i < this.planes.length; i++) {\n                this.planes[i][this.planes[i].length - 1] = this.planes[i][this.planes[i].length - 1].rotate(rotation).norm();\n            }\n            return this;\n        }\n        scale(s) {\n            for (let i = 0; i < this.points.length; i++) {\n                this.points[i] = this.points[i].mul_(s);\n            }\n            this.changeMaxRadius();\n            return this;\n        }\n        changeMaxRadius() {\n            let max = 0;\n            for (let i = 0; i < this.points.length; i++) {\n                let m2 = this.points[i].mod2();\n                if (m2 > max) max = m2;\n            }\n            this.maxRadius = Math.sqrt(max);\n        }\n        moveOrigin(s) {\n            for (let i = 0; i < this.points.length; i++) {\n                this.points[i].subTo(s);\n            }\n            return this;\n        }\n        forward(step) {\n            let p = (new See3D.Math3D.Point3D(0, 0, step)).rotate(this.rotation.inverse());\n            this.position.x -= p.x;\n            this.position.y -= p.y;\n            this.position.z += p.z;\n            return this;\n        }\n        left(step) {\n            let p = (new See3D.Math3D.Point3D(step, 0, 0)).rotate(this.rotation.inverse());\n            this.position.x -= p.x;\n            this.position.y -= p.y;\n            this.position.z += p.z;\n            return this;\n        }\n        up(step) {\n            let p = (new See3D.Math3D.Point3D(0, step, 0)).rotate(this.rotation.inverse());\n            this.position.x -= p.x;\n            this.position.y -= p.y;\n            this.position.z += p.z;\n            return this;\n        }\n        right(step) {\n            return this.left(-step);\n        }\n        back(step) {\n            return this.forward(-step);\n        }\n        down(step) {\n            return this.up(-step);\n        }\n    }\n    class Camera extends Item {\n        constructor(position = See3D.Math3D.Point3D.Zero(), rotation = new See3D.Math3D.Point3D()) {\n            super(position, rotation);\n            this.scene = null;\n        }\n        render() {\n            let { ctx, alpha, beta, width, height } = this;\n            let ta = Math.tan(alpha / 2);\n            let tb = Math.tan(beta / 2);\n            let maxLen = Math.max(width, height);\n            let items = this.scene.items;\n            for (let i = 0; i < items.length; i++) {\n                let item = items[i];\n                let points = item.points;\n                let planes = item.planes;\n                let itemCamPos = this.transToCameraPosition(See3D.Math3D.Point3D.Zero(), item.position);\n                if (itemCamPos.z + item.maxRadius <= 0 || itemCamPos.z + item.maxRadius > 1000) continue;// 近裁面和远裁面的判断\n                if (itemCamPos.z < Math.tan(Math.PI / 2 - alpha / 2) * Math.abs(itemCamPos.x + ((itemCamPos.x > 0 ? -1 : 1) * item.maxRadius))) continue;\n                // console.log(Math.tan(Math.PI / 2 - beta / 2) * Math.abs(itemCamPos.z + item.maxRadius * 2));\n                if (itemCamPos.z < Math.tan(Math.PI / 2 - beta / 2) * Math.abs(itemCamPos.y + ((itemCamPos.y > 0 ? -1 : 1) * item.maxRadius))) continue;\n                let transedPoints = { };\n                let transedPlanes = [ ];\n                if (item.type == \"Point\") {\n                    let point3d = this.transToCameraPosition(points[0], item.position);\n                    ctx.beginPath();\n                    ctx.arc(...point3d.mappingTo(ta, tb, maxLen), 1, 0, 2 * Math.PI);\n                    ctx.fillStyle = \"#fff\";\n                    ctx.fill();\n                    ctx.closePath();\n                    continue;\n                } else if (item.type == \"Line\") {\n                    ctx.beginPath();\n                    ctx.moveTo(...this.transToCameraPosition(points[0], item.position).mappingTo(ta, tb, maxLen));\n                    ctx.lineTo(...this.transToCameraPosition(points[1], item.position).mappingTo(ta, tb, maxLen));\n                    ctx.strokeStyle = \"#fff\";\n                    ctx.stroke();\n                    ctx.closePath();\n                    continue;\n                }\n                // for (let j = 0; j < points.length; j++) {\n                //     transedPoints.push(this.transToCameraPosition(points[j], item.position));\n                // }\n                let getPoint = function (i) {\n                    try {\n                        if (transedPoints[i]) return transedPoints[i];\n                        return transedPoints[i] = this.transToCameraPosition(points[i], item.position);\n                    } catch (e) {\n                        console.error(e);\n                        debugger;\n                    }\n                }.bind(this);\n                for (let j = 0, c = 0; j < planes.length; j++) {\n                    let plane = planes[j];\n                    if (plane[plane.length - 1].rotate(this.rotation.inverse()).mul(getPoint(plane[0]).inverse().norm()) < 0) {\n                        continue;\n                    }\n                    transedPlanes.push([]);\n                    for (let k = 0; k < plane.length - 1; k++) {\n                        // console.log(transedPlanes[j], j);\n                        transedPlanes[c].push(getPoint(plane[k]));\n                    }\n                    c++;\n                }\n                for (let j = 0; j < transedPlanes.length; j++) {\n                    ctx.beginPath();\n                    let tmppos = transedPlanes[j][0].mappingTo(ta, tb, maxLen);\n                    ctx.moveTo(...tmppos);\n                    for (let k = 1; k < transedPlanes[j].length; k++) {\n                        ctx.lineTo(...transedPlanes[j][k].mappingTo(ta, tb, maxLen));\n                    }\n                    ctx.lineTo(...tmppos);\n                    ctx.strokeStyle = \"#fff\";\n                    // ctx.fillStyle = \"#fff\";\n                    ctx.stroke();\n                    // ctx.fill();\n                    ctx.closePath();\n                }\n            }\n            return this;\n        }\n        transToCameraPosition(point, itemWorldPoint) {\n            return point.add(itemWorldPoint).sub(this.position).rotate(this.rotation.inverse());\n        }\n        get ctx() { return this.scene.ctx; }\n        get alpha() { return this.scene.alpha; }\n        get beta() { return this.scene.beta; }\n        get width() { return this.scene.width; }\n        get height() { return this.scene.height; }\n    }\n    class Point extends Item {\n        constructor(position = See3D.Math3D.Point3D.Zero(), rotation = new See3D.Math3D.Point3D()) {\n            super(position, rotation);\n            this.type = \"Point\";\n            this.points = [\n                See3D.Math3D.Point3D.Zero()\n            ];\n            this.maxRadius = 0;\n        }\n        changeMaxRadius() { }\n    }\n    class Line extends Item {\n        constructor(position = See3D.Math3D.Point3D.Zero(), start, end) {\n            super(position, new See3D.Math3D.Point3D());\n            this.type = \"Line\";\n            this.points = [\n                start.copy(), end.copy()\n            ];\n            this.maxRadius = start.sub(end).mod();\n        }\n        changeMaxRadius() {\n            this.maxRadius = start.sub(end).mod();\n        }\n    }\n    class Cube extends Item {\n        constructor(position = See3D.Math3D.Point3D.Zero(), {\n            w = 5, h = 5, d = 5\n        } = { }) {\n            super(position, See3D.Math3D.Point3D.Zero());\n            this.type = \"Cube\";\n            this.points = [\n                new See3D.Math3D.Point3D(w, h, d),\n                new See3D.Math3D.Point3D(w, h, -d),\n                new See3D.Math3D.Point3D(w, -h, d),\n                new See3D.Math3D.Point3D(w, -h, -d),\n                new See3D.Math3D.Point3D(-w, h, d),\n                new See3D.Math3D.Point3D(-w, h, -d),\n                new See3D.Math3D.Point3D(-w, -h, d),\n                new See3D.Math3D.Point3D(-w, -h, -d),\n            ];\n            // up: 0, 1, 4, 5\n            this.planes = [\n                [ 1, 2, 3, new Point3D(1, 0, 0) ],\n                [ 0, 1, 2, new Point3D(1, 0, 0) ],\n                [ 5, 6, 7, new Point3D(-1, 0, 0) ],\n                [ 4, 5, 6, new Point3D(-1, 0, 0) ],\n                [ 3, 6, 7, new Point3D(0, -1, 0) ],\n                [ 2, 3, 6, new Point3D(0, -1, 0) ],\n                [ 1, 4, 5, new Point3D(0, 1, 0) ],\n                [ 0, 1, 4, new Point3D(0, 1, 0) ],\n                [ 2, 4, 6, new Point3D(0, 0, 1) ],\n                [ 0, 2, 4, new Point3D(0, 0, 1) ],\n                [ 3, 5, 7, new Point3D(0, 0, -1) ],\n                [ 1, 3, 5, new Point3D(0, 0, -1) ],\n            ];\n            this.maxRadius = Math.sqrt(w ** 2 + h ** 2 + d ** 2);\n        }\n    }\n    class Pyramid extends Item {\n        constructor(position = See3D.Math3D.Point3D.Zero(), {\n            pointCount, radius, height\n        } = { }) {\n            super(position, See3D.Math3D.Point3D.Zero());\n            this.type = \"Pyramid\";\n            this.points = [ new See3D.Math3D.Point3D(0, height / 2, 0) ];\n            this.planes = [];\n            this.maxRadius = Math.max(radius, height);\n            let delta_theta = Math.PI * 2 / pointCount;\n            let plane_bottom = [];\n            let i = 1, theta = 0;\n            for (; i <= pointCount; i++, theta += delta_theta) {\n                this.points.push(new See3D.Math3D.Point3D(radius * Math.sin(theta), -height / 2, radius * Math.cos(theta)));\n                plane_bottom.push(i);\n                this.planes.push([ i === 1 ? pointCount : i - 1, i, 0, (new See3D.Math3D.Point3D(Math.sin(theta - delta_theta / 2), Math.sin(Math.PI / 2 - Math.atan(radius / height)), Math.cos(theta - delta_theta / 2))).norm() ]);\n                // if (i > 0) this.planes.push([ i, i + 1, 0, new See3D.Math3D.Point3D(0, 0, 0) ]);\n            }\n            // this.planes.push([ i + 1, 1, 0, (new See3D.Math3D.Point3D(Math.sin(theta - delta_theta / 2), Math.sin(Math.PI / 2 - Math.atan(radius / height)), Math.cos(theta - delta_theta / 2))).norm() ]);\n            plane_bottom.push(new See3D.Math3D.Point3D(0, -1, 0));\n            this.planes.push(plane_bottom);\n        }\n    }\n    class Platform extends Item {\n        constructor(position = See3D.Math3D.Point3D.Zero(), {\n            pointCount, radius1, radius2, height\n        } = { }) {\n            super(position, See3D.Math3D.Point3D.Zero());\n            this.type = \"Platform\";\n            this.points = [  ];\n            this.planes = [];\n            this.maxRadius = Math.max(radius1, radius2, height);\n            let delta_theta = Math.PI * 2 / pointCount;\n            let plane_bottom = [], plane_top = [];\n            let i = 0, theta = 0;\n            for (; i < pointCount; i++, theta += delta_theta) {\n                this.points.push(new See3D.Math3D.Point3D(radius1 * Math.sin(theta), -height / 2, radius1 * Math.cos(theta)));\n                plane_bottom.push(i);\n            }\n            for (theta = 0; i < pointCount << 1; i++, theta += delta_theta) {\n                this.points.push(new See3D.Math3D.Point3D(radius2 * Math.sin(theta), height / 2, radius2 * Math.cos(theta)));\n                plane_top.push(i);\n                this.planes.push([ i, i === pointCount ? (pointCount << 1) - 1 : i - 1, i === pointCount ? pointCount - 1 : i - pointCount - 1, i === pointCount ? 0 : i - pointCount, (new See3D.Math3D.Point3D(Math.sin(theta - delta_theta / 2), Math.cos(Math.PI / 2 - Math.atan((radius1 - radius2) / height)), Math.cos(theta - delta_theta / 2))).norm() ]);\n            }\n            plane_top.push(new See3D.Math3D.Point3D(0, 1, 0));\n            plane_bottom.push(new See3D.Math3D.Point3D(0, -1, 0));\n            this.planes.push(plane_top);\n            this.planes.push(plane_bottom);\n        }\n    }\n    class Prism extends Platform {\n        constructor(position = See3D.Math3D.Point3D.Zero(), {\n            pointCount, radius, height\n        } = { }) {\n            super(position, {\n                pointCount: pointCount,\n                radius1: radius,\n                radius2: radius,\n                height: height\n            });\n            this.type = \"Prism\";\n        }\n    }\n\n    lib.define(\"Scene\", Scene);\n    lib.define(\"Item\", Item);\n    lib.define(\"Camera\", Camera);\n    lib.define(\"Point\", Point);\n    lib.define(\"Line\", Line);\n    lib.define(\"Cube\", Cube);\n    lib.define(\"Pyramid\", Pyramid);\n    lib.define(\"Platform\", Platform);\n    lib.define(\"Prism\", Prism);\n\n    lib.toSee3D();\n    lib.global();\n}(See3D);"]}